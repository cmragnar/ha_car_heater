automation:
  - id: 'car_heater_on_timer'
    alias: 'Turn on car heating timer'
    trigger:
    - entity_id: input_boolean.car_heater_enable
      from: 'off'
      platform: state
      to: 'on'
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater_3h_before_temp
        # CHANGE-ME: outside temperature sensor
        value: '{{ states.weather.home.attributes.temperature }}'
    - event: car_heater_timer_enabled

  - id: 'car_heater_start_if_needed'
    alias: 'Turn on car heating immediately if needed'
    trigger:
    - platform: event
      event_type: car_heater_timer_enabled
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ states.sensor.car_time_until_departure.state|float > 0 }}'
        - condition: template
          value_template: '{{ (states.sensor.car_heater_run_time.state|float * 60) >= states.sensor.car_time_until_departure.state|float }}'
    action:
    - service: switch.turn_on
      # CHANGE-ME: car heater power switch
      entity_id: switch.car_heater

  - id: 'car_heater_push'
    alias:  'Send no car heater connected -push notification'
    description: ''
    trigger:
    - platform: state
      # CHANGE-ME: car heater power switch
      entity_id: switch.car_heater
      from: 'off'
      to: 'on'
    condition: []
    action:
    # CHANGE-ME: power consumption sensor
    - wait_template: '{{ states(''sensor.car_heater_power'') | float
        > 0 }}'
      timeout: 00:00:35
      continue_on_timeout: true
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ not wait.completed }}'
        sequence:
          # CHANGE-ME: mobile app notification device
          - service: notify.mobile_app_samsung_s10
            data:
              message: Car heating power cable is not connected!
              title: Car heater
      default: []
    mode: single

  - id: 'car_heater_calculated_time'
    alias: 'Start engine heater at calculated start time'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_start_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: switch.turn_on
      # CHANGE-ME: car heater power switch
      entity_id: switch.car_heater
  - id: 'car_heater_departure'
    alias: 'Stop engine heater at departure time'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M:%S") == states.input_datetime.car_heater_departure_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: switch.turn_off
      # CHANGE-ME: car heater power switch
      entity_id: switch.car_heater

  - id: 'car_heater_temp_sample_3h'
    alias: 'Sample temperature 3h before departure time'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_3h_before_start_time.state }}'
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater_3h_before_temp
        # CHANGE-ME: outside temperature sensor
        value: '{{ states.weather.home.attributes.temperature }}'

# Input sensors
input_datetime:
  car_heater_departure_time:
    name: Car heater departure time
    has_time: true
    has_date: false

input_number:
  car_heater_3h_before_temp:
    name: Sample temp
    unit_of_measurement: Â°C
    icon: mdi:thermometer
    min: -30
    max: 30
    step: 0.5

# Boolean sensors
input_boolean:
  car_heater_weekday:
    name: Only weekdays
    icon: mdi:calendar
  car_heater_enable:
    name: Enable car heating timer

sensor:
  - platform: template
    sensors:
      car_heater_run_time:
        friendly_name: 'Calculated run time'
        unit_of_measurement: h
        value_template: >
          {% if ((states('input_number.car_heater_3h_before_temp')|float) < 10) %}
            {% if not states('input_number.car_heater_3h_before_temp') == 'unknown' %}
              {{(states('input_number.car_heater_3h_before_temp')|float * (-0.05) + 1)|round(1)}}
            {%endif%}
          {%else%}
            0
          {%endif%}

  - platform: template
    sensors:
      car_heater_start_time:
        friendly_name: 'Calculated start time'
        icon_template: mdi:clock
        value_template: >
          {% if states.input_datetime.car_heater_departure_time.state is defined %}
            {% if ((states('sensor.car_heater_run_time')|float) > 0) %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('input_datetime.car_heater_departure_time')) - (states('sensor.car_heater_run_time')|float *3600))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
            {%else%}
              Never
            {%endif%}
          {% else %}
              waiting for sensors
          {% endif%}
  - platform: template
    sensors:
      car_heater_3h_before_start_time:
        friendly_name: '3h before start time'
        icon_template: mdi:clock
        value_template: >
          {% if states.input_datetime.car_heater_departure_time.state is defined %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('input_datetime.car_heater_departure_time')) - (10800))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
          {% else %}
              waiting for sensors
          {% endif%}
  - platform: template
    sensors:
      car_heater_status:
        friendly_name: 'Car heater status'
        icon_template: mdi:clock
        # CHANGE-ME: car heater power switch (note: two entrys in this block)
        value_template: >
          {% if is_state('input_boolean.car_heater_enable', 'on') %}
            {% if is_state('switch.car_heater', 'on') %}
              Car heating is currently active and will be stopped at {{ states.input_datetime.car_heater_departure_time.state }}
            {% else %}
              Car heating will start approximately at {{ states.sensor.car_heater_start_time.state }} and will be stopped at {{ states.input_datetime.car_heater_departure_time.attributes.timestamp  | timestamp_custom("%H:%M", false) }}
            {% endif%}
          {% else %}
            {% if is_state('switch.car_heater', 'on') %}
              Car heating is active and controlled manually!
            {% else %}
              No car heating scheduled
            {%endif %}

          {% endif%}
  - platform: template
    sensors:
      car_time_until_departure:
        friendly_name: 'time until set departure'
        icon_template: mdi:clock
        value_template: >-
          {%- if as_timestamp(now().strftime("%Y-%m-%d ") + states.input_datetime.car_heater_departure_time.state) < as_timestamp(now()) -%}
            {{ ((as_timestamp(now().strftime("%Y-%m-%d ") +
              states.input_datetime.car_heater_departure_time.state) + (3600*24)) -
              as_timestamp(now().strftime("%Y-%m-%d %H:%M"))) / 60 }}
          {%- else -%}
            {{ (as_timestamp(now().strftime("%Y-%m-%d ") +
              states.input_datetime.car_heater_departure_time.state) -
              as_timestamp(now().strftime("%Y-%m-%d %H:%M"))) / 60 }}
          {%- endif -%}

